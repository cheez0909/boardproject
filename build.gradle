plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'boardproject'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	/* 토큰 관련 S */
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
	/* 토큰 관련 E */

	runtimeOnly 'com.oracle.database.jdbc:ojdbc11:23.3.0.23.09'
	implementation 'com.oracle.database.nls:orai18n:23.3.0.23.09'

	/* 롬복 S */
	testCompileOnly 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	/* 롬복 E */

	implementation 'org.modelmapper:modelmapper:3.2.0'


	/* querydsl 사용 / jakarta 추가 S */
	implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'
	/* querydsl 사용 / jakarta 추가 E */


	/* 이메일 인증 */
	implementation 'org.springframework.boot:spring-boot-starter-mail:3.2.2'

	/* text DB */
	testImplementation 'com.h2database:h2'

}

tasks.named('test') {
	useJUnitPlatform()
}

// q형태의 클래스가 만들어 질때
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
	file(querydslDir).deleteDir()
}